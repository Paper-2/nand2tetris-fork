// CarryUnit4.hdl
// Compute carries c1,c2,c3 and cout from p[4], g[4], cin
// inputs: p[4], g[4], cin
// outputs: c1, c2, c3, cout

CHIP CarryUnit4 {
    IN p0, p1, p2, p3, g0, g1, g2, g3, cin;
    OUT c1, c2, c3, cout;

    PARTS:
    // c1 = g0 OR (p0 & cin)
    And (a=p0, b=cin, out=t0);
    Or  (a=g0, b=t0, out=c1);

    // c2 = g1 OR (p1 & g0) OR (p1 & p0 & cin)
    And (a=p1, b=g0, out=t1);
    And (a=p1, b=p0, out=t2);
    And (a=t2, b=cin, out=t3);
    Or  (a=g1, b=t1, out=u1);
    Or  (a=u1, b=t3, out=c2);

    // c3 = g2 OR (p2 & g1) OR (p2 & p1 & g0) OR (p2 & p1 & p0 & cin)
    And (a=p2, b=g1, out=t4);
    And (a=p2, b=p1, out=t5);
    And (a=t5, b=g0, out=t6);
    And (a=t5, b=p0, out=t7);
    And (a=t7, b=cin, out=t8);
    Or  (a=g2, b=t4, out=u2);
    Or  (a=u2, b=t6, out=u3);
    Or  (a=u3, b=t8, out=c3);

    // cout = g3 OR (p3 & g2) OR (p3 & p2 & g1) OR (p3 & p2 NAD p1 & g0) OR (p3 & p2 & p1 & p0 & cin)
    And (a=p3, b=g2, out=t9);
    And (a=p3, b=p2, out=t10);
    And (a=t10, b=g1, out=t11);
    And (a=t10, b=p1, out=t12);
    And (a=t12, b=g0, out=t13);
    And (a=t12, b=p0, out=t14);
    And (a=t14, b=cin, out=t15);
    Or  (a=g3, b=t9, out=v1);
    Or  (a=v1, b=t11, out=v2);
    Or  (a=v2, b=t13, out=v3);
    Or  (a=v3, b=t15, out=cout);
}