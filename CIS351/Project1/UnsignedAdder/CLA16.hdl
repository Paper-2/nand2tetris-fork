// CLA16.hdl
// 16-bit carry look-ahead adder built from four 4-bit CLA blocks
// inputs: a[16], b[16], cin
// outputs: sum[16], cout

// This could easily be made into a signed adder if not for the restriction of not being able to use OUT vars as inputs
// Which I may or may not get rid of.


CHIP CLA16 {
    IN a[16], b[16], cin;
    OUT sum[16], cout;

    PARTS:
    // Wires 4 CLA4 together
    CLA4 (a=a[0..3], b=b[0..3], cin=cin, sum=sum[0..3], cout=c1);
    CLA4 (a=a[4..7], b=b[4..7], cin=c1, sum=sum[4..7], cout=c2);
    CLA4 (a=a[8..11], b=b[8..11], cin=c2, sum=sum[8..11], cout=c3);
    CLA4 (a=a[12..15], b=b[12..15], cin=c3, sum=sum[12..15], cout=cout);
}
